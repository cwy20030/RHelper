% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Merger.R
\name{Merger}
\alias{Merger}
\title{A Function to Automatically Merging and Order Variables}
\usage{
Merger(
  df_list,
  Reference_df = NULL,
  ReferenceID,
  Assigned_Name,
  sorting_row = TRUE,
  based = "Update",
  ...
)
}
\arguments{
\item{df_list}{A list of data.frame names to merge. Make sure that the data.frame have been imported to your environment. If the user wishes to import data.frame in bulk in a directory, one can use the Auto_Importer function from the library. <e.g., c("df_1","df_2","df_3")>}

\item{Reference_df}{The name of the data.frame containing IDs or unique identifiers to merge and sort the merge data with. If not specified as default, the first data.frame in the df_list <default: NULL>}

\item{ReferenceID}{The name of the variable in the data.frame that the user wishes to use to merge all data.frame. Please, make sure that all data.frame specified in the data.list contains the same name as specified in the ReferenceID.}

\item{Assigned_Name}{The name for the new merge data.frame}

\item{sorting_row}{Reordering the data.frame based on the sequence of ID in the ReferenceID  <Default: TRUE, i.e., Sorting data.frame by the ReferenceID>}

\item{based}{A logical indicator determining whether to keep the duplicated columns (i.e., columns with the same names). If "Update" is passed, the columns with the shared name will be retrieved from the "df_list". Note that only the shared column from the last listed data.list will be kept when updating. When "Ref" (as Reference) is passed, only the column from the Reference_df will be kept. If "KA" (which stands for keeping all), is passed, both duplicated columns will be kept. In the latter scenario, the column with .x is the original column from the df_list and .y for the Reference_df.}
}
\value{
export a merged data.frame to your working environment in R (i.e., Global Enviroment in R Studio)
}
\description{
This function is a bulk merger for data.frames. Users can decide whether to merge based on the structure of the referencing data.frame or each individual data.frame within the data list. Users may wish to use the Auto_Importer function in the RHelper.
}
\examples{

# Create Sample Data
data("iris")

# Extract variable names
Variables = names(iris)

# Add row.ID as the ID for each data point
iris$ID = row.names(iris)


# Splitting the original iris data.frame into 5 data.lists where each
# contains an unique variable + ID.
Test_list = lapply(Variables,function(x){ iris[c(x,"ID")] })

# Assign names to each data.list
names(Test_list) = Variables

# Merge all files
Merger(df_list = Test_list,
       ReferenceID = "ID" ,
       based = "Update",
       Assigned_Name = "iris1")

# Check if all values are exactly the same
all(iris1[names(iris)] == iris)

}
\keyword{merge}
