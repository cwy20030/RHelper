% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Parity.R
\name{Parity}
\alias{Parity}
\title{Parity}
\usage{
Parity(num, goal = NULL, switch = FALSE, method = "add")
}
\arguments{
\item{num}{a number}

\item{goal}{a logical operater to ensure that the num is/will be "odd" or "even". This will overwrite the manual switch function.}

\item{switch}{converting a number from even to odd and vice versa.}

\item{method}{an operater indicating either to add ("add") or subtract ("minus") 1 from the number to switch the Parity of the number}
}
\value{
If \code{switch} is FALSE, returns a the number's class and Parity. If \code{switch} is TRUE, returns a new number of the opposite Parity. If \code{goal} is set to "odd" or "even", ensure the number to be the designated parity.
}
\description{
A function to identify the parity of a number (i.e., even or odd)
}
\details{
This function will check if a number is odd or even. By using the switch subfunction, users may change the Parity of the number (by adding/subtracting 1).
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# example code


# Generate an array of possible numbers for data length
Pool = 1000:12000

# Generate an array of possible numbers for distribution parameters
Parameter = 1:9


# Randomly select one number from the pool
n = sample(Pool, size = 1)

# randomly select shape and scale parameters
p1 = sample(Parameter, size = 1)
p2 = sample(Parameter, size = 1)


# Generate a random sample
data = rgamma(n, shape = p1, scale = p2)

# Try smoothing the data with the medians using moving window via zoo
library("lattice")
library("zoo")

#' ## the length of the window
K = floor(n * 0.1)

#Identify the Parity
Parity(K)

# <Note> In zoo, an odd number of window length can often prevent issues when
# using moving window.

## To make sure that we can stir up the pot, make sure K is an even number
K = Parity(K, goal = "even")

# pad the front and the back
Head = rep(data[1],K)
Tail = rep(data[length(data)],K)

dataNew = c(Head,data,Tail)

## Rolling median
length(rollmedian(dataNew, k = K)) == length(data)

### If K is odd number then the length of the data would
### likely not be the same as the original data.

# To ensure that the window length is odd, set goal to "odd"
K = Parity(K, goal = "odd")

# Now rerun rollmedian again
\dontshow{\}) # examplesIf}
}
\keyword{Parity}
\keyword{even,}
\keyword{odd,}
